#!/bin/ksh

db2 connect to db2data > /dev/null

#Create Tables
echo "[DB2] Creating Tables..."

#Product Table
db2 "CREATE TABLE Product(
	SKU varchar(25) NOT NULL,
	Name varchar(70) NOT NULL,
	Department varchar(40),
	IsPrescription integer,
	Price decimal (20,2) NOT NULL,
	Stock integer NOT NULL DEFAULT 0,
	PRIMARY KEY(SKU)
)"

#Sales Table
db2 "CREATE TABLE Sale(
	ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	Timestamp timestamp NOT NULL,
	Name varchar(30) NOT NULL DEFAULT,
	PRIMARY KEY(ID)
)"

#Prescription Table
db2 "CREATE TABLE Prescription(
	ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	Customer varchar(30) NOT NULL,
	Doctor varchar(30) NOT NULL,
	DateOrdered timestamp NOT NULL,
	DateDelivered timestamp,
	isFulfilled integer NOT NULL DEFAULT 0,
	PRIMARY KEY(ID)
)"

#SalesProduct Table
db2 "CREATE TABLE SaleProduct(
	ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	SaleID integer NOT NULL,
	ProductSKU varchar(70) NOT NULL,
	Quantity integer NOT NULL DEFAULT 0,
	PRIMARY KEY(ID),
	FOREIGN KEY(SaleID) REFERENCES Sale(ID),
	FOREIGN KEY(ProductSKU) REFERENCES Product(SKU)
)" 

#PrescriptionProduct Table
db2 "CREATE TABLE PrescriptionProduct(
	ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	PrescriptionID integer NOT NULL,
	ProductSKU varchar(70) NOT NULL,
	Quantity integer NOT NULL DEFAULT 0,
	PRIMARY KEY(ID),
	FOREIGN KEY(ProductSKU) REFERENCES Product(SKU),
	FOREIGN KEY(PrescriptionID) REFERENCES Prescription(ID)
)"
echo "[DB2] Creating Tables: Done"
echo "[DB2] Creating Views:..."

db2 "CREATE VIEW ProductView AS SELECT 
	Name, Price, Stock, Department FROM Product"

echo "[DB2] Creating Views: Done"

echo "[DB2] Creating triggers:..."
db2 "CREATE TRIGGER Stockabove0
	AFTER
	INSERT ON SaleProduct
	referencing NEW AS NewProd
	FOR EACH ROW
	BEGIN ATOMIC
	UPDATE Product SET Stock = Stock - NewProd.quantity WHERE SKU = NewProd.ProductSKU;
	END"

echo "[DB2] Creating triggers: DONE"

db2 "ALTER TABLE Product ADD CONSTRAINT price_constraint CHECK (Price >= 0)"

